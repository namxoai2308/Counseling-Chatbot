{"ast":null,"code":"import axios from 'axios';\nconst API_BASE_URL = process.env.REACT_APP_API_URL || 'http://localhost:8000';\nconst api = axios.create({\n  baseURL: API_BASE_URL,\n  headers: {\n    'Content-Type': 'application/json'\n  }\n});\napi.interceptors.request.use(config => {\n  const token = localStorage.getItem('token');\n  if (token) config.headers.Authorization = `Bearer ${token}`;\n  return config;\n});\nexport const authAPI = {\n  login: credentials => api.post('/api/auth/login', credentials),\n  register: userData => api.post('/api/auth/register', userData),\n  getMe: () => api.get('/api/auth/me')\n};\nexport const chatAPI = {\n  createSession: data => api.post('/api/chat/sessions', data),\n  getSessions: () => api.get('/api/chat/sessions'),\n  getSession: sessionId => api.get(`/api/chat/sessions/${sessionId}`),\n  sendMessage: (sessionId, message) => api.post(`/api/chat/sessions/${sessionId}/messages`, message),\n  deleteSession: sessionId => api.delete(`/api/chat/sessions/${sessionId}`)\n};\nexport const teacherAPI = {\n  getAllStudentsHistory: () => api.get('/api/teacher/students'),\n  getStudentSessions: studentId => api.get(`/api/teacher/students/${studentId}/sessions`),\n  getSessionDetails: sessionId => api.get(`/api/teacher/sessions/${sessionId}`)\n};\nexport const documentAPI = {\n  upload: formData => api.post('/api/documents/upload', formData, {\n    headers: {\n      'Content-Type': 'multipart/form-data'\n    }\n  }),\n  getDocuments: () => api.get('/api/documents')\n};\nexport default api;","map":{"version":3,"names":["axios","API_BASE_URL","process","env","REACT_APP_API_URL","api","create","baseURL","headers","interceptors","request","use","config","token","localStorage","getItem","Authorization","authAPI","login","credentials","post","register","userData","getMe","get","chatAPI","createSession","data","getSessions","getSession","sessionId","sendMessage","message","deleteSession","delete","teacherAPI","getAllStudentsHistory","getStudentSessions","studentId","getSessionDetails","documentAPI","upload","formData","getDocuments"],"sources":["/home/xoai/Chatbot/frontend/src/services/api.js"],"sourcesContent":["import axios from 'axios';\n\nconst API_BASE_URL = process.env.REACT_APP_API_URL || 'http://localhost:8000';\n\nconst api = axios.create({\n  baseURL: API_BASE_URL,\n  headers: {'Content-Type': 'application/json'},\n});\n\napi.interceptors.request.use((config) => {\n  const token = localStorage.getItem('token');\n  if (token) config.headers.Authorization = `Bearer ${token}`;\n  return config;\n});\n\nexport const authAPI = {\n  login: (credentials) => api.post('/api/auth/login', credentials),\n  register: (userData) => api.post('/api/auth/register', userData),\n  getMe: () => api.get('/api/auth/me'),\n};\n\nexport const chatAPI = {\n  createSession: (data) => api.post('/api/chat/sessions', data),\n  getSessions: () => api.get('/api/chat/sessions'),\n  getSession: (sessionId) => api.get(`/api/chat/sessions/${sessionId}`),\n  sendMessage: (sessionId, message) => api.post(`/api/chat/sessions/${sessionId}/messages`, message),\n  deleteSession: (sessionId) => api.delete(`/api/chat/sessions/${sessionId}`),\n};\n\nexport const teacherAPI = {\n  getAllStudentsHistory: () => api.get('/api/teacher/students'),\n  getStudentSessions: (studentId) => api.get(`/api/teacher/students/${studentId}/sessions`),\n  getSessionDetails: (sessionId) => api.get(`/api/teacher/sessions/${sessionId}`),\n};\n\nexport const documentAPI = {\n  upload: (formData) => api.post('/api/documents/upload', formData, {\n    headers: {'Content-Type': 'multipart/form-data'},\n  }),\n  getDocuments: () => api.get('/api/documents'),\n};\n\nexport default api;\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,YAAY,GAAGC,OAAO,CAACC,GAAG,CAACC,iBAAiB,IAAI,uBAAuB;AAE7E,MAAMC,GAAG,GAAGL,KAAK,CAACM,MAAM,CAAC;EACvBC,OAAO,EAAEN,YAAY;EACrBO,OAAO,EAAE;IAAC,cAAc,EAAE;EAAkB;AAC9C,CAAC,CAAC;AAEFH,GAAG,CAACI,YAAY,CAACC,OAAO,CAACC,GAAG,CAAEC,MAAM,IAAK;EACvC,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;EAC3C,IAAIF,KAAK,EAAED,MAAM,CAACJ,OAAO,CAACQ,aAAa,GAAG,UAAUH,KAAK,EAAE;EAC3D,OAAOD,MAAM;AACf,CAAC,CAAC;AAEF,OAAO,MAAMK,OAAO,GAAG;EACrBC,KAAK,EAAGC,WAAW,IAAKd,GAAG,CAACe,IAAI,CAAC,iBAAiB,EAAED,WAAW,CAAC;EAChEE,QAAQ,EAAGC,QAAQ,IAAKjB,GAAG,CAACe,IAAI,CAAC,oBAAoB,EAAEE,QAAQ,CAAC;EAChEC,KAAK,EAAEA,CAAA,KAAMlB,GAAG,CAACmB,GAAG,CAAC,cAAc;AACrC,CAAC;AAED,OAAO,MAAMC,OAAO,GAAG;EACrBC,aAAa,EAAGC,IAAI,IAAKtB,GAAG,CAACe,IAAI,CAAC,oBAAoB,EAAEO,IAAI,CAAC;EAC7DC,WAAW,EAAEA,CAAA,KAAMvB,GAAG,CAACmB,GAAG,CAAC,oBAAoB,CAAC;EAChDK,UAAU,EAAGC,SAAS,IAAKzB,GAAG,CAACmB,GAAG,CAAC,sBAAsBM,SAAS,EAAE,CAAC;EACrEC,WAAW,EAAEA,CAACD,SAAS,EAAEE,OAAO,KAAK3B,GAAG,CAACe,IAAI,CAAC,sBAAsBU,SAAS,WAAW,EAAEE,OAAO,CAAC;EAClGC,aAAa,EAAGH,SAAS,IAAKzB,GAAG,CAAC6B,MAAM,CAAC,sBAAsBJ,SAAS,EAAE;AAC5E,CAAC;AAED,OAAO,MAAMK,UAAU,GAAG;EACxBC,qBAAqB,EAAEA,CAAA,KAAM/B,GAAG,CAACmB,GAAG,CAAC,uBAAuB,CAAC;EAC7Da,kBAAkB,EAAGC,SAAS,IAAKjC,GAAG,CAACmB,GAAG,CAAC,yBAAyBc,SAAS,WAAW,CAAC;EACzFC,iBAAiB,EAAGT,SAAS,IAAKzB,GAAG,CAACmB,GAAG,CAAC,yBAAyBM,SAAS,EAAE;AAChF,CAAC;AAED,OAAO,MAAMU,WAAW,GAAG;EACzBC,MAAM,EAAGC,QAAQ,IAAKrC,GAAG,CAACe,IAAI,CAAC,uBAAuB,EAAEsB,QAAQ,EAAE;IAChElC,OAAO,EAAE;MAAC,cAAc,EAAE;IAAqB;EACjD,CAAC,CAAC;EACFmC,YAAY,EAAEA,CAAA,KAAMtC,GAAG,CAACmB,GAAG,CAAC,gBAAgB;AAC9C,CAAC;AAED,eAAenB,GAAG","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}