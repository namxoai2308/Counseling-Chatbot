{"ast":null,"code":"import axios from 'axios';\nconst API_BASE_URL = process.env.REACT_APP_API_URL || 'http://localhost:8000';\nconst api = axios.create({\n  baseURL: API_BASE_URL,\n  headers: {\n    'Content-Type': 'application/json'\n  }\n});\n\n// Add token to requests\napi.interceptors.request.use(config => {\n  const token = localStorage.getItem('token');\n  if (token) {\n    config.headers.Authorization = `Bearer ${token}`;\n  }\n  return config;\n}, error => {\n  return Promise.reject(error);\n});\n\n// Auth APIs\nexport const authAPI = {\n  login: credentials => api.post('/api/auth/login', credentials),\n  register: userData => api.post('/api/auth/register', userData),\n  getMe: () => api.get('/api/auth/me')\n};\n\n// Chat APIs\nexport const chatAPI = {\n  createSession: data => api.post('/api/chat/sessions', data),\n  getSessions: () => api.get('/api/chat/sessions'),\n  getSession: sessionId => api.get(`/api/chat/sessions/${sessionId}`),\n  sendMessage: (sessionId, message) => api.post(`/api/chat/sessions/${sessionId}/messages`, message),\n  deleteSession: sessionId => api.delete(`/api/chat/sessions/${sessionId}`)\n};\n\n// Teacher APIs\nexport const teacherAPI = {\n  getAllStudentsHistory: () => api.get('/api/teacher/students'),\n  getStudentSessions: studentId => api.get(`/api/teacher/students/${studentId}/sessions`),\n  getSessionDetails: sessionId => api.get(`/api/teacher/sessions/${sessionId}`)\n};\n\n// Document APIs\nexport const documentAPI = {\n  upload: formData => api.post('/api/documents/upload', formData, {\n    headers: {\n      'Content-Type': 'multipart/form-data'\n    }\n  }),\n  getDocuments: () => api.get('/api/documents')\n};\nexport default api;","map":{"version":3,"names":["axios","API_BASE_URL","process","env","REACT_APP_API_URL","api","create","baseURL","headers","interceptors","request","use","config","token","localStorage","getItem","Authorization","error","Promise","reject","authAPI","login","credentials","post","register","userData","getMe","get","chatAPI","createSession","data","getSessions","getSession","sessionId","sendMessage","message","deleteSession","delete","teacherAPI","getAllStudentsHistory","getStudentSessions","studentId","getSessionDetails","documentAPI","upload","formData","getDocuments"],"sources":["/home/xoai/Chatbot/frontend/src/services/api.js"],"sourcesContent":["import axios from 'axios';\n\nconst API_BASE_URL = process.env.REACT_APP_API_URL || 'http://localhost:8000';\n\nconst api = axios.create({\n  baseURL: API_BASE_URL,\n  headers: {\n    'Content-Type': 'application/json',\n  },\n});\n\n// Add token to requests\napi.interceptors.request.use(\n  (config) => {\n    const token = localStorage.getItem('token');\n    if (token) {\n      config.headers.Authorization = `Bearer ${token}`;\n    }\n    return config;\n  },\n  (error) => {\n    return Promise.reject(error);\n  }\n);\n\n// Auth APIs\nexport const authAPI = {\n  login: (credentials) => api.post('/api/auth/login', credentials),\n  register: (userData) => api.post('/api/auth/register', userData),\n  getMe: () => api.get('/api/auth/me'),\n};\n\n// Chat APIs\nexport const chatAPI = {\n  createSession: (data) => api.post('/api/chat/sessions', data),\n  getSessions: () => api.get('/api/chat/sessions'),\n  getSession: (sessionId) => api.get(`/api/chat/sessions/${sessionId}`),\n  sendMessage: (sessionId, message) => \n    api.post(`/api/chat/sessions/${sessionId}/messages`, message),\n  deleteSession: (sessionId) => api.delete(`/api/chat/sessions/${sessionId}`),\n};\n\n// Teacher APIs\nexport const teacherAPI = {\n  getAllStudentsHistory: () => api.get('/api/teacher/students'),\n  getStudentSessions: (studentId) => \n    api.get(`/api/teacher/students/${studentId}/sessions`),\n  getSessionDetails: (sessionId) => \n    api.get(`/api/teacher/sessions/${sessionId}`),\n};\n\n// Document APIs\nexport const documentAPI = {\n  upload: (formData) => \n    api.post('/api/documents/upload', formData, {\n      headers: { 'Content-Type': 'multipart/form-data' },\n    }),\n  getDocuments: () => api.get('/api/documents'),\n};\n\nexport default api;\n\n\n\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,YAAY,GAAGC,OAAO,CAACC,GAAG,CAACC,iBAAiB,IAAI,uBAAuB;AAE7E,MAAMC,GAAG,GAAGL,KAAK,CAACM,MAAM,CAAC;EACvBC,OAAO,EAAEN,YAAY;EACrBO,OAAO,EAAE;IACP,cAAc,EAAE;EAClB;AACF,CAAC,CAAC;;AAEF;AACAH,GAAG,CAACI,YAAY,CAACC,OAAO,CAACC,GAAG,CACzBC,MAAM,IAAK;EACV,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;EAC3C,IAAIF,KAAK,EAAE;IACTD,MAAM,CAACJ,OAAO,CAACQ,aAAa,GAAG,UAAUH,KAAK,EAAE;EAClD;EACA,OAAOD,MAAM;AACf,CAAC,EACAK,KAAK,IAAK;EACT,OAAOC,OAAO,CAACC,MAAM,CAACF,KAAK,CAAC;AAC9B,CACF,CAAC;;AAED;AACA,OAAO,MAAMG,OAAO,GAAG;EACrBC,KAAK,EAAGC,WAAW,IAAKjB,GAAG,CAACkB,IAAI,CAAC,iBAAiB,EAAED,WAAW,CAAC;EAChEE,QAAQ,EAAGC,QAAQ,IAAKpB,GAAG,CAACkB,IAAI,CAAC,oBAAoB,EAAEE,QAAQ,CAAC;EAChEC,KAAK,EAAEA,CAAA,KAAMrB,GAAG,CAACsB,GAAG,CAAC,cAAc;AACrC,CAAC;;AAED;AACA,OAAO,MAAMC,OAAO,GAAG;EACrBC,aAAa,EAAGC,IAAI,IAAKzB,GAAG,CAACkB,IAAI,CAAC,oBAAoB,EAAEO,IAAI,CAAC;EAC7DC,WAAW,EAAEA,CAAA,KAAM1B,GAAG,CAACsB,GAAG,CAAC,oBAAoB,CAAC;EAChDK,UAAU,EAAGC,SAAS,IAAK5B,GAAG,CAACsB,GAAG,CAAC,sBAAsBM,SAAS,EAAE,CAAC;EACrEC,WAAW,EAAEA,CAACD,SAAS,EAAEE,OAAO,KAC9B9B,GAAG,CAACkB,IAAI,CAAC,sBAAsBU,SAAS,WAAW,EAAEE,OAAO,CAAC;EAC/DC,aAAa,EAAGH,SAAS,IAAK5B,GAAG,CAACgC,MAAM,CAAC,sBAAsBJ,SAAS,EAAE;AAC5E,CAAC;;AAED;AACA,OAAO,MAAMK,UAAU,GAAG;EACxBC,qBAAqB,EAAEA,CAAA,KAAMlC,GAAG,CAACsB,GAAG,CAAC,uBAAuB,CAAC;EAC7Da,kBAAkB,EAAGC,SAAS,IAC5BpC,GAAG,CAACsB,GAAG,CAAC,yBAAyBc,SAAS,WAAW,CAAC;EACxDC,iBAAiB,EAAGT,SAAS,IAC3B5B,GAAG,CAACsB,GAAG,CAAC,yBAAyBM,SAAS,EAAE;AAChD,CAAC;;AAED;AACA,OAAO,MAAMU,WAAW,GAAG;EACzBC,MAAM,EAAGC,QAAQ,IACfxC,GAAG,CAACkB,IAAI,CAAC,uBAAuB,EAAEsB,QAAQ,EAAE;IAC1CrC,OAAO,EAAE;MAAE,cAAc,EAAE;IAAsB;EACnD,CAAC,CAAC;EACJsC,YAAY,EAAEA,CAAA,KAAMzC,GAAG,CAACsB,GAAG,CAAC,gBAAgB;AAC9C,CAAC;AAED,eAAetB,GAAG","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}